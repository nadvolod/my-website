name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ============================================================================
  # QUALITY CHECKS & TESTING
  # ============================================================================
  test:
    name: 🧪 Tests & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 💅 Check Prettier formatting
        run: npm run format -- --check

      - name: 🏗️ Build project
        run: npm run build

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run Playwright tests
        run: npm run test

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: 🔗 Run API-based link validation
        run: npm run test:links:api

      - name: ⚡ Run performance tests
        run: npm run test:performance

  # ============================================================================
  # SECURITY AUDIT
  # ============================================================================
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔍 Run security audit
        run: npm audit --audit-level high

      - name: 🛡️ Run dependency vulnerability check
        run: npx audit-ci --moderate

  # ============================================================================
  # BUILD & BUNDLE ANALYSIS
  # ============================================================================
  build-analysis:
    name: 📊 Build Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📦 Analyze bundle size
        run: npm run analyze
        continue-on-error: true

      - name: 📊 Bundle size report
        run: |
          echo "## 📦 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Bundle analysis completed. Check the build output for details." >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # PREVIEW DEPLOYMENT (Pull Requests)
  # ============================================================================
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔍 Deploy to Vercel (Preview)
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: 💬 Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🔍 **Preview deployment ready!** Check out your changes at the preview URL provided by Vercel.'
            })

  # ============================================================================
  # PRODUCTION DEPLOYMENT (Main branch)
  # ============================================================================
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, security, build-analysis]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🚀 Deploy to Vercel (Production)
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: ✅ Deployment Success Notification
        run: |
          echo "## 🚀 Production Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "Website deployed to: https://nikolayadvolodkin.com" >> $GITHUB_STEP_SUMMARY
          echo "Deployment completed at: $(date)" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # POST-DEPLOYMENT HEALTH CHECKS
  # ============================================================================
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🏥 Run post-deployment health checks
        run: |
          echo "Running health checks against production..."
          # Wait for deployment to be fully ready
          sleep 30
          # Run basic health check
          curl -f https://nikolayadvolodkin.com || exit 1
          echo "✅ Site is responding"

      - name: 🔗 Validate critical links post-deployment
        run: |
          echo "Validating critical business links on production..."
          npm run test:links:api
        continue-on-error: true

      - name: ⚡ Run production performance audit
        run: |
          echo "Running Lighthouse audit on production..."
          npx lighthouse https://nikolayadvolodkin.com --output=json --output-path=lighthouse-report.json --chrome-flags="--headless" || true

      - name: 📊 Upload Lighthouse report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report
          path: lighthouse-report.json
          retention-days: 30 